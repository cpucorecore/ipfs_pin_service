// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: proto/pin_record.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PinRecord struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Cid                 string                 `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Status              int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	ReceivedAt          int64                  `protobuf:"varint,3,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	EnqueuedAt          int64                  `protobuf:"varint,4,opt,name=enqueued_at,json=enqueuedAt,proto3" json:"enqueued_at,omitempty"`
	PinStartAt          int64                  `protobuf:"varint,5,opt,name=pin_start_at,json=pinStartAt,proto3" json:"pin_start_at,omitempty"`
	PinSucceededAt      int64                  `protobuf:"varint,6,opt,name=pin_succeeded_at,json=pinSucceededAt,proto3" json:"pin_succeeded_at,omitempty"`
	ExpireAt            int64                  `protobuf:"varint,7,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	ScheduleUnpinAt     int64                  `protobuf:"varint,8,opt,name=schedule_unpin_at,json=scheduleUnpinAt,proto3" json:"schedule_unpin_at,omitempty"`
	UnpinStartAt        int64                  `protobuf:"varint,9,opt,name=unpin_start_at,json=unpinStartAt,proto3" json:"unpin_start_at,omitempty"`
	UnpinSucceededAt    int64                  `protobuf:"varint,10,opt,name=unpin_succeeded_at,json=unpinSucceededAt,proto3" json:"unpin_succeeded_at,omitempty"`
	LastUpdateAt        int64                  `protobuf:"varint,11,opt,name=last_update_at,json=lastUpdateAt,proto3" json:"last_update_at,omitempty"`
	Size                int64                  `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
	PinAttemptCount     int32                  `protobuf:"varint,13,opt,name=pin_attempt_count,json=pinAttemptCount,proto3" json:"pin_attempt_count,omitempty"`
	UnpinAttemptCount   int32                  `protobuf:"varint,14,opt,name=unpin_attempt_count,json=unpinAttemptCount,proto3" json:"unpin_attempt_count,omitempty"`
	SizeLimit           int64                  `protobuf:"varint,15,opt,name=size_limit,json=sizeLimit,proto3" json:"size_limit,omitempty"`
	ProvideStartAt      int64                  `protobuf:"varint,16,opt,name=provide_start_at,json=provideStartAt,proto3" json:"provide_start_at,omitempty"`
	ProvideSucceededAt  int64                  `protobuf:"varint,17,opt,name=provide_succeeded_at,json=provideSucceededAt,proto3" json:"provide_succeeded_at,omitempty"`
	ProvideAttemptCount int32                  `protobuf:"varint,18,opt,name=provide_attempt_count,json=provideAttemptCount,proto3" json:"provide_attempt_count,omitempty"`
	ProvideError        string                 `protobuf:"bytes,19,opt,name=provide_error,json=provideError,proto3" json:"provide_error,omitempty"`
	History             []*PinRecord           `protobuf:"bytes,20,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PinRecord) Reset() {
	*x = PinRecord{}
	mi := &file_proto_pin_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinRecord) ProtoMessage() {}

func (x *PinRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pin_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinRecord.ProtoReflect.Descriptor instead.
func (*PinRecord) Descriptor() ([]byte, []int) {
	return file_proto_pin_record_proto_rawDescGZIP(), []int{0}
}

func (x *PinRecord) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *PinRecord) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PinRecord) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *PinRecord) GetEnqueuedAt() int64 {
	if x != nil {
		return x.EnqueuedAt
	}
	return 0
}

func (x *PinRecord) GetPinStartAt() int64 {
	if x != nil {
		return x.PinStartAt
	}
	return 0
}

func (x *PinRecord) GetPinSucceededAt() int64 {
	if x != nil {
		return x.PinSucceededAt
	}
	return 0
}

func (x *PinRecord) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *PinRecord) GetScheduleUnpinAt() int64 {
	if x != nil {
		return x.ScheduleUnpinAt
	}
	return 0
}

func (x *PinRecord) GetUnpinStartAt() int64 {
	if x != nil {
		return x.UnpinStartAt
	}
	return 0
}

func (x *PinRecord) GetUnpinSucceededAt() int64 {
	if x != nil {
		return x.UnpinSucceededAt
	}
	return 0
}

func (x *PinRecord) GetLastUpdateAt() int64 {
	if x != nil {
		return x.LastUpdateAt
	}
	return 0
}

func (x *PinRecord) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PinRecord) GetPinAttemptCount() int32 {
	if x != nil {
		return x.PinAttemptCount
	}
	return 0
}

func (x *PinRecord) GetUnpinAttemptCount() int32 {
	if x != nil {
		return x.UnpinAttemptCount
	}
	return 0
}

func (x *PinRecord) GetSizeLimit() int64 {
	if x != nil {
		return x.SizeLimit
	}
	return 0
}

func (x *PinRecord) GetProvideStartAt() int64 {
	if x != nil {
		return x.ProvideStartAt
	}
	return 0
}

func (x *PinRecord) GetProvideSucceededAt() int64 {
	if x != nil {
		return x.ProvideSucceededAt
	}
	return 0
}

func (x *PinRecord) GetProvideAttemptCount() int32 {
	if x != nil {
		return x.ProvideAttemptCount
	}
	return 0
}

func (x *PinRecord) GetProvideError() string {
	if x != nil {
		return x.ProvideError
	}
	return ""
}

func (x *PinRecord) GetHistory() []*PinRecord {
	if x != nil {
		return x.History
	}
	return nil
}

var File_proto_pin_record_proto protoreflect.FileDescriptor

const file_proto_pin_record_proto_rawDesc = "" +
	"\n" +
	"\x16proto/pin_record.proto\x12\x03ipm\"\xf4\x05\n" +
	"\tPinRecord\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status\x12\x1f\n" +
	"\vreceived_at\x18\x03 \x01(\x03R\n" +
	"receivedAt\x12\x1f\n" +
	"\venqueued_at\x18\x04 \x01(\x03R\n" +
	"enqueuedAt\x12 \n" +
	"\fpin_start_at\x18\x05 \x01(\x03R\n" +
	"pinStartAt\x12(\n" +
	"\x10pin_succeeded_at\x18\x06 \x01(\x03R\x0epinSucceededAt\x12\x1b\n" +
	"\texpire_at\x18\a \x01(\x03R\bexpireAt\x12*\n" +
	"\x11schedule_unpin_at\x18\b \x01(\x03R\x0fscheduleUnpinAt\x12$\n" +
	"\x0eunpin_start_at\x18\t \x01(\x03R\funpinStartAt\x12,\n" +
	"\x12unpin_succeeded_at\x18\n" +
	" \x01(\x03R\x10unpinSucceededAt\x12$\n" +
	"\x0elast_update_at\x18\v \x01(\x03R\flastUpdateAt\x12\x12\n" +
	"\x04size\x18\f \x01(\x03R\x04size\x12*\n" +
	"\x11pin_attempt_count\x18\r \x01(\x05R\x0fpinAttemptCount\x12.\n" +
	"\x13unpin_attempt_count\x18\x0e \x01(\x05R\x11unpinAttemptCount\x12\x1d\n" +
	"\n" +
	"size_limit\x18\x0f \x01(\x03R\tsizeLimit\x12(\n" +
	"\x10provide_start_at\x18\x10 \x01(\x03R\x0eprovideStartAt\x120\n" +
	"\x14provide_succeeded_at\x18\x11 \x01(\x03R\x12provideSucceededAt\x122\n" +
	"\x15provide_attempt_count\x18\x12 \x01(\x05R\x13provideAttemptCount\x12#\n" +
	"\rprovide_error\x18\x13 \x01(\tR\fprovideError\x12(\n" +
	"\ahistory\x18\x14 \x03(\v2\x0e.ipm.PinRecordR\ahistoryB/Z-github.com/cpucorecore/ipfs_pin_service/protob\x06proto3"

var (
	file_proto_pin_record_proto_rawDescOnce sync.Once
	file_proto_pin_record_proto_rawDescData []byte
)

func file_proto_pin_record_proto_rawDescGZIP() []byte {
	file_proto_pin_record_proto_rawDescOnce.Do(func() {
		file_proto_pin_record_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pin_record_proto_rawDesc), len(file_proto_pin_record_proto_rawDesc)))
	})
	return file_proto_pin_record_proto_rawDescData
}

var file_proto_pin_record_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_pin_record_proto_goTypes = []any{
	(*PinRecord)(nil), // 0: ipm.PinRecord
}
var file_proto_pin_record_proto_depIdxs = []int32{
	0, // 0: ipm.PinRecord.history:type_name -> ipm.PinRecord
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_pin_record_proto_init() }
func file_proto_pin_record_proto_init() {
	if File_proto_pin_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pin_record_proto_rawDesc), len(file_proto_pin_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pin_record_proto_goTypes,
		DependencyIndexes: file_proto_pin_record_proto_depIdxs,
		MessageInfos:      file_proto_pin_record_proto_msgTypes,
	}.Build()
	File_proto_pin_record_proto = out.File
	file_proto_pin_record_proto_goTypes = nil
	file_proto_pin_record_proto_depIdxs = nil
}
